[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ctwin32"
description = "Access selected win32 APIs through ctypes"
authors = [{name = "Rocco Matano"}]
requires-python = ">=3.8"
license = {text = "MIT License"}
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Operating System :: Microsoft :: Windows",
    "Environment :: Win32 (MS Windows)",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    ]
dynamic = ["version", "readme"]

[project.urls]
homepage = "https://github.com/RoccoMatano/ctwin32"
changelog = "https://github.com/RoccoMatano/ctwin32/blob/master/changelog.md"

################################################################################

[tool.setuptools]
packages = ["ctwin32"]

[tool.setuptools.dynamic]
version = {attr = "ctwin32.__version__"}
readme = {file = ["README.md"], content-type = "text/markdown"}

################################################################################

[tool.ruff]
target-version = "py38"
line-length = 80

[tool.ruff.lint]
select = [
    "B",        # flake8-bugbear
    "C4",       # flake8-comprehensions
    "COM",      # flake8-commas
    "E",        # pycodestyle errors
    "F",        # Pyflakes
    "INP",      # flake8-no-pep420
    "ISC",      # flake8-implicit-str-concat
    # "N",        # pep8-naming is not approprate for win32 API names
    "PIE",      # flake8-pie
    "PLE",      # pylint errors
    "PLW",      # pylint warnings
    "PTH",      # flake8-use-pathlib
    "Q",        # flake8-quotes
    "RET",      # flake8-return
    "RSE",      # flake8-raise
    "RUF",      # ruff-specific rules
    "SIM",      # flake8-simplify
    "UP",       # pyupgrade
    "W",        # pycodestyle warnings
    "YTT",      # flake8-2020
    ]
ignore = [
    "COM812",   # Trailing comma missing
    "ISC003",   # Explicitly concatenated string should be implicitly concatenated
    "PTH123",   # open() should be replaced by Path.open()
    "RSE102",   # Unnecessary parentheses on raised exception
    "RET505",   # Unnecessary {branch} after return statement
    "RET508",   # Unnecessary {branch} after break statement
    "SIM102",   # Use a single if statement instead of nested if statements
    "SIM117",   # Use a single instead of nested `with` statements
    "UP039",    # unnecessary-class-parentheses
    "RUF013",   # implicit-optional -> no f..g typing!!!
    ]

################################################################################

[tool.flake8]
# E305 expected %s blank lines after class or function definition, found %d
# E221 multiple spaces before operator
extend-ignore = ["E305", "E221"]
max-line-length = 80

################################################################################
